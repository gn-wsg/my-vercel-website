import { NextResponse } from 'next/server';
import { Event } from '@/lib/scrapers';

export async function POST(request: Request) {
  try {
    const { email, events, searchTerm, startDate, endDate } = await request.json();
    
    if (!email) {
      return NextResponse.json(
        { error: 'Email is required' },
        { status: 400 }
      );
    }

    if (!events || events.length === 0) {
      return NextResponse.json(
        { error: 'No events to send' },
        { status: 400 }
      );
    }

    // Create email content
    const emailContent = createEmailContent(events, searchTerm, startDate, endDate);
    
    // For now, we'll just log the email content
    // In a real implementation, you'd use an email service like SendGrid, Resend, or Nodemailer
    console.log(`📧 Email to ${email}:`);
    console.log(emailContent);
    
    // TODO: Implement actual email sending
    // For now, we'll simulate success
    
    return NextResponse.json({
      success: true,
      message: 'Events email sent successfully',
      email: email,
      eventsCount: events.length,
      emailContent: emailContent // For debugging
    });
    
  } catch (error) {
    console.error('Error in send events email API:', error);
    return NextResponse.json(
      { error: 'Internal server error', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    );
  }
}

function createEmailContent(events: Event[], searchTerm?: string, startDate?: string, endDate?: string): string {
  const filterInfo = [];
  if (searchTerm) filterInfo.push(`Search: "${searchTerm}"`);
  if (startDate) filterInfo.push(`From: ${startDate}`);
  if (endDate) filterInfo.push(`To: ${endDate}`);
  
  const filterText = filterInfo.length > 0 ? `\n\nFilters Applied:\n${filterInfo.join('\n')}\n` : '';
  
  const eventsList = events.map((event, index) => {
    const eventDate = new Date(event.date).toLocaleDateString('en-US', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
    
    return `${index + 1}. ${event.title}
   📅 ${eventDate} at ${event.time}
   📍 ${event.location}
   🏢 Host: ${event.host}
   🔗 ${event.link}
   ${event.description ? `📝 ${event.description}` : ''}
`;
  }).join('\n');

  return `⚡ DC Energy Events - Your Event List

${filterText}Found ${events.length} upcoming energy events:

${eventsList}

---
This email was generated by DC Energy Events
Visit your dashboard to find more events: [Your Website URL]

To unsubscribe, reply to this email with "UNSUBSCRIBE"`;
}
